{"version":3,"sources":["./node_modules/ngx-bootstrap/alert/fesm5/ngx-bootstrap-alert.js","./node_modules/ngx-bootstrap/modal/fesm5/ngx-bootstrap-modal.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC0F;AAC1F;AACA;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,sBAAsB,EAAE,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6TAA6T;AAC7T,qCAAqC,qEAAuB;AAC5D,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,oBAAoB;AAC7B,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,IAAI,wDAAU;AACd,QAAQ,oEAAQ;AAChB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEmD;AACpD;;;;;;;;;;;;;AC3KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiL;AAClF;AACvB;AACT;;AAE/D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mEAAmE,iEAAK;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iEAAK;AACrE;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,qBAAqB;AAC9B,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,iBAAiB,OAAO,0DAAY,6CAA6C;AACjF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,4EAA4E,eAAe;AAC3F,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY,yDAAK;AACjB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,2BAA2B;AAC3B,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAU,IAAI,4DAAU;AACpC,gBAAgB,4DAAU;AAC1B;AACA;AACA;AACA,wCAAwC,4DAAU;AAClD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAQ;AAChB,QAAQ,0DAAQ;AAChB;AACA;AACA,aAAa,iEAAK;AAClB;AACA;AACA;AACA;AACA,kCAAkC,0DAAQ;AAC1C,wBAAwB;AACxB;AACA,yBAAyB,0BAA0B,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAU,IAAI,4DAAU;AACxC,gBAAgB,4DAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAK;AACjB;AACA;AACA;AACA,aAAa,iEAAK;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB,4DAAU,IAAI,4DAAU;AAC5C,gDAAgD,4DAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uCAAuC,0DAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,4DAAU,oBAAoB,0DAAQ;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa,4DAAU;AACvB;AACA;AACA,4CAA4C,0DAAQ;AACpD,8BAA8B,4DAAU;AACxC;AACA;AACA,YAAY,4DAAU;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,4DAAU;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC,4DAAU;AAC7C,mBAAmB,EAAE;AACrB;AACA,mCAAmC,4DAAU;AAC7C;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,qFAAsB;AACtC,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,iBAAiB,OAAO,0DAAY,sCAAsC;AAC1E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+BAA+B,EAAE;AACtD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,+CAA+C;AACrE,sBAAsB,4CAA4C;AAClE;AACA;AACA,mBAAmB,mHAAmH;AACtI;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,qFAAsB;AACtC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wCAAwC,qFAAsB,EAAE,4EAAkB;AAClF;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEyK;AAC1K","file":"default~views-base-base-module~views-notifications-notifications-module.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { Injectable, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { OnChange } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AlertConfig = /** @class */ (function () {\n    function AlertConfig() {\n        /**\n         * default alert type\n         */\n        this.type = 'warning';\n        /**\n         * is alerts are dismissible by default\n         */\n        this.dismissible = false;\n        /**\n         * default time before alert will dismiss\n         */\n        this.dismissOnTimeout = undefined;\n    }\n    AlertConfig.decorators = [\n        { type: Injectable }\n    ];\n    return AlertConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AlertComponent = /** @class */ (function () {\n    function AlertComponent(_config, changeDetection) {\n        var _this = this;\n        this.changeDetection = changeDetection;\n        /**\n         * Alert type.\n         * Provides one of four bootstrap supported contextual classes:\n         * `success`, `info`, `warning` and `danger`\n         */\n        this.type = 'warning';\n        /**\n         * If set, displays an inline \"Close\" button\n         */\n        this.dismissible = false;\n        /**\n         * Is alert visible\n         */\n        this.isOpen = true;\n        /**\n         * This event fires immediately after close instance method is called,\n         * $event is an instance of Alert component.\n         */\n        this.onClose = new EventEmitter();\n        /**\n         * This event fires when alert closed, $event is an instance of Alert component\n         */\n        this.onClosed = new EventEmitter();\n        this.classes = '';\n        this.dismissibleChange = new EventEmitter();\n        Object.assign(this, _config);\n        this.dismissibleChange.subscribe((/**\n         * @param {?} dismissible\n         * @return {?}\n         */\n        function (dismissible) {\n            _this.classes = _this.dismissible ? 'alert-dismissible' : '';\n            _this.changeDetection.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    AlertComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.dismissOnTimeout) {\n            // if dismissOnTimeout used as attr without binding, it will be a string\n            setTimeout((/**\n             * @return {?}\n             */\n            function () { return _this.close(); }), parseInt((/** @type {?} */ (this.dismissOnTimeout)), 10));\n        }\n    };\n    // todo: animation ` If the .fade and .in classes are present on the element,\n    // the alert will fade out before it is removed`\n    /**\n     * Closes an alert by removing it from the DOM.\n     */\n    // todo: animation ` If the .fade and .in classes are present on the element,\n    // the alert will fade out before it is removed`\n    /**\n     * Closes an alert by removing it from the DOM.\n     * @return {?}\n     */\n    AlertComponent.prototype.close = \n    // todo: animation ` If the .fade and .in classes are present on the element,\n    // the alert will fade out before it is removed`\n    /**\n     * Closes an alert by removing it from the DOM.\n     * @return {?}\n     */\n    function () {\n        if (!this.isOpen) {\n            return;\n        }\n        this.onClose.emit(this);\n        this.isOpen = false;\n        this.changeDetection.markForCheck();\n        this.onClosed.emit(this);\n    };\n    AlertComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'alert,bs-alert',\n                    template: \"<ng-template [ngIf]=\\\"isOpen\\\">\\n  <div [class]=\\\"'alert alert-' + type\\\" role=\\\"alert\\\" [ngClass]=\\\"classes\\\">\\n    <ng-template [ngIf]=\\\"dismissible\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        <span class=\\\"sr-only\\\">Close</span>\\n      </button>\\n    </ng-template>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }] }\n    ];\n    /** @nocollapse */\n    AlertComponent.ctorParameters = function () { return [\n        { type: AlertConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    AlertComponent.propDecorators = {\n        type: [{ type: Input }],\n        dismissible: [{ type: Input }],\n        dismissOnTimeout: [{ type: Input }],\n        isOpen: [{ type: Input }],\n        onClose: [{ type: Output }],\n        onClosed: [{ type: Output }]\n    };\n    __decorate([\n        OnChange(),\n        __metadata(\"design:type\", Object)\n    ], AlertComponent.prototype, \"dismissible\", void 0);\n    return AlertComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AlertModule = /** @class */ (function () {\n    function AlertModule() {\n    }\n    /**\n     * @return {?}\n     */\n    AlertModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return { ngModule: AlertModule, providers: [AlertConfig] };\n    };\n    AlertModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [AlertComponent],\n                    exports: [AlertComponent],\n                    entryComponents: [AlertComponent]\n                },] }\n    ];\n    return AlertModule;\n}());\n\nexport { AlertComponent, AlertConfig, AlertModule };\n//# sourceMappingURL=ngx-bootstrap-alert.js.map\n","import { Injectable, Component, ElementRef, Renderer2, HostListener, Directive, ViewContainerRef, Input, Output, EventEmitter, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BsModalRef = /** @class */ (function () {\n    function BsModalRef() {\n        /**\n         * Hides the modal\n         */\n        this.hide = Function;\n        /**\n         * Sets new class to modal window\n         */\n        this.setClass = Function;\n    }\n    BsModalRef.decorators = [\n        { type: Injectable }\n    ];\n    return BsModalRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ModalBackdropOptions = /** @class */ (function () {\n    function ModalBackdropOptions(options) {\n        this.animate = true;\n        Object.assign(this, options);\n    }\n    return ModalBackdropOptions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ModalOptions = /** @class */ (function () {\n    function ModalOptions() {\n    }\n    ModalOptions.decorators = [\n        { type: Injectable }\n    ];\n    return ModalOptions;\n}());\n/** @type {?} */\nvar modalConfigDefaults = {\n    backdrop: true,\n    keyboard: true,\n    focus: true,\n    show: false,\n    ignoreBackdropClick: false,\n    class: '',\n    animated: true,\n    initialState: {}\n};\n/** @type {?} */\nvar CLASS_NAME = {\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n    BACKDROP: 'modal-backdrop',\n    OPEN: 'modal-open',\n    FADE: 'fade',\n    IN: 'in',\n    // bs3\n    SHOW: 'show' // bs4\n};\n/** @type {?} */\nvar TRANSITION_DURATIONS = {\n    MODAL: 300,\n    BACKDROP: 150\n};\n/** @type {?} */\nvar DISMISS_REASONS = {\n    BACKRDOP: 'backdrop-click',\n    ESC: 'esc'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ModalContainerComponent = /** @class */ (function () {\n    function ModalContainerComponent(options, _element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.isShown = false;\n        this.isModalHiding = false;\n        this.config = Object.assign({}, options);\n    }\n    /**\n     * @return {?}\n     */\n    ModalContainerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isAnimated) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n        }\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this.isShown = true;\n            _this._renderer.addClass(_this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        }), this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n        if (document && document.body) {\n            if (this.bsModalService.getModalsCount() === 1) {\n                this.bsModalService.checkScrollbar();\n                this.bsModalService.setScrollbar();\n            }\n            this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n        }\n        if (this._element.nativeElement) {\n            this._element.nativeElement.focus();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ModalContainerComponent.prototype.onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            event.target !== this._element.nativeElement) {\n            return;\n        }\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n        this.hide();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ModalContainerComponent.prototype.onEsc = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard &&\n            this.level === this.bsModalService.getModalsCount()) {\n            this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n            this.hide();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ModalContainerComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.isShown) {\n            this.hide();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ModalContainerComponent.prototype.hide = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isModalHiding || !this.isShown) {\n            return;\n        }\n        this.isModalHiding = true;\n        this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this.isShown = false;\n            if (document &&\n                document.body &&\n                _this.bsModalService.getModalsCount() === 1) {\n                _this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n            }\n            _this.bsModalService.hide(_this.level);\n            _this.isModalHiding = false;\n        }), this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    };\n    ModalContainerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'modal-container',\n                    template: \"\\n    <div [class]=\\\"'modal-dialog' + (config.class ? ' ' + config.class : '')\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  \",\n                    host: {\n                        class: 'modal',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true'\n                    }\n                }] }\n    ];\n    /** @nocollapse */\n    ModalContainerComponent.ctorParameters = function () { return [\n        { type: ModalOptions },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    ModalContainerComponent.propDecorators = {\n        onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n        onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }]\n    };\n    return ModalContainerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This component will be added as background layout for modals if enabled\n */\nvar ModalBackdropComponent = /** @class */ (function () {\n    function ModalBackdropComponent(element, renderer) {\n        this._isShown = false;\n        this.element = element;\n        this.renderer = renderer;\n    }\n    Object.defineProperty(ModalBackdropComponent.prototype, \"isAnimated\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isAnimated;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._isAnimated = value;\n            // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ModalBackdropComponent.prototype, \"isShown\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isShown;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._isShown = value;\n            if (value) {\n                this.renderer.addClass(this.element.nativeElement, \"\" + CLASS_NAME.IN);\n            }\n            else {\n                this.renderer.removeClass(this.element.nativeElement, \"\" + CLASS_NAME.IN);\n            }\n            if (!isBs3()) {\n                if (value) {\n                    this.renderer.addClass(this.element.nativeElement, \"\" + CLASS_NAME.SHOW);\n                }\n                else {\n                    this.renderer.removeClass(this.element.nativeElement, \"\" + CLASS_NAME.SHOW);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ModalBackdropComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.isAnimated) {\n            this.renderer.addClass(this.element.nativeElement, \"\" + CLASS_NAME.FADE);\n            Utils.reflow(this.element.nativeElement);\n        }\n        this.isShown = true;\n    };\n    ModalBackdropComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bs-modal-backdrop',\n                    template: ' ',\n                    host: { class: CLASS_NAME.BACKDROP }\n                }] }\n    ];\n    /** @nocollapse */\n    ModalBackdropComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    return ModalBackdropComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar TRANSITION_DURATION = 300;\n/** @type {?} */\nvar BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\nvar ModalDirective = /** @class */ (function () {\n    function ModalDirective(_element, _viewContainerRef, _renderer, clf) {\n        this._element = _element;\n        this._renderer = _renderer;\n        /**\n         * This event fires immediately when the `show` instance method is called.\n         */\n        this.onShow = new EventEmitter();\n        /**\n         * This event is fired when the modal has been made visible to the user\n         * (will wait for CSS transitions to complete)\n         */\n        this.onShown = new EventEmitter();\n        /**\n         * This event is fired immediately when\n         * the hide instance method has been called.\n         */\n        this.onHide = new EventEmitter();\n        /**\n         * This event is fired when the modal has finished being\n         * hidden from the user (will wait for CSS transitions to complete).\n         */\n        this.onHidden = new EventEmitter();\n        this._isShown = false;\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.timerHideModal = 0;\n        this.timerRmBackDrop = 0;\n        this.isNested = false;\n        this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n    }\n    Object.defineProperty(ModalDirective.prototype, \"config\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._config;\n        },\n        /** allows to set modal configuration via element property */\n        set: /**\n         * allows to set modal configuration via element property\n         * @param {?} conf\n         * @return {?}\n         */\n        function (conf) {\n            this._config = this.getConfig(conf);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ModalDirective.prototype, \"isShown\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isShown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ModalDirective.prototype.onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            event.target !== this._element.nativeElement) {\n            return;\n        }\n        this.dismissReason = DISMISS_REASONS.BACKRDOP;\n        this.hide(event);\n    };\n    // todo: consider preventing default and stopping propagation\n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ModalDirective.prototype.onEsc = \n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this._isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard) {\n            this.dismissReason = DISMISS_REASONS.ESC;\n            this.hide();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ModalDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.config = void 0;\n        if (this._isShown) {\n            this._isShown = false;\n            this.hideModal();\n            this._backdrop.dispose();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ModalDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._config = this._config || this.getConfig();\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._config.show) {\n                _this.show();\n            }\n        }), 0);\n    };\n    /* Public methods */\n    /** Allows to manually toggle modal visibility */\n    /* Public methods */\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n    ModalDirective.prototype.toggle = /* Public methods */\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n    function () {\n        return this._isShown ? this.hide() : this.show();\n    };\n    /** Allows to manually open modal */\n    /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n    ModalDirective.prototype.show = /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.dismissReason = null;\n        this.onShow.emit(this);\n        if (this._isShown) {\n            return;\n        }\n        clearTimeout(this.timerHideModal);\n        clearTimeout(this.timerRmBackDrop);\n        this._isShown = true;\n        this.checkScrollbar();\n        this.setScrollbar();\n        if (document$1 && document$1.body) {\n            if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n                this.isNested = true;\n            }\n            else {\n                this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n            }\n        }\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        function () {\n            _this.showElement();\n        }));\n    };\n    /** Allows to manually close modal */\n    /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n    ModalDirective.prototype.hide = /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        if (event) {\n            event.preventDefault();\n        }\n        this.onHide.emit(this);\n        // todo: add an option to prevent hiding\n        if (!this._isShown) {\n            return;\n        }\n        window$1.clearTimeout(this.timerHideModal);\n        window$1.clearTimeout(this.timerRmBackDrop);\n        this._isShown = false;\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        // this._addClassIn = false;\n        if (this._config.animated) {\n            this.timerHideModal = window$1.setTimeout((/**\n             * @return {?}\n             */\n            function () { return _this.hideModal(); }), TRANSITION_DURATION);\n        }\n        else {\n            this.hideModal();\n        }\n    };\n    /** Private methods @internal */\n    /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n    ModalDirective.prototype.getConfig = /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        return Object.assign({}, modalConfigDefaults, config);\n    };\n    /**\n     *  Show dialog\n     *  @internal\n     */\n    /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.showElement = /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // todo: replace this with component loader usage\n        if (!this._element.nativeElement.parentNode ||\n            this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n            // don't move modals dom position\n            if (document$1 && document$1.body) {\n                document$1.body.appendChild(this._element.nativeElement);\n            }\n        }\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n        if (this._config.animated) {\n            Utils.reflow(this._element.nativeElement);\n        }\n        // this._addClassIn = true;\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        /** @type {?} */\n        var transitionComplete = (/**\n         * @return {?}\n         */\n        function () {\n            if (_this._config.focus) {\n                _this._element.nativeElement.focus();\n            }\n            _this.onShown.emit(_this);\n        });\n        if (this._config.animated) {\n            setTimeout(transitionComplete, TRANSITION_DURATION);\n        }\n        else {\n            transitionComplete();\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.hideModal = /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        function () {\n            if (!_this.isNested) {\n                if (document$1 && document$1.body) {\n                    _this._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n                }\n                _this.resetScrollbar();\n            }\n            _this.resetAdjustments();\n            _this.focusOtherModal();\n            _this.onHidden.emit(_this);\n        }));\n    };\n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /** @internal */\n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n    ModalDirective.prototype.showBackdrop = \n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n    function (callback) {\n        var _this = this;\n        if (this._isShown &&\n            this.config.backdrop &&\n            (!this.backdrop || !this.backdrop.instance.isShown)) {\n            this.removeBackdrop();\n            this._backdrop\n                .attach(ModalBackdropComponent)\n                .to('body')\n                .show({ isAnimated: this._config.animated });\n            this.backdrop = this._backdrop._componentRef;\n            if (!callback) {\n                return;\n            }\n            if (!this._config.animated) {\n                callback();\n                return;\n            }\n            setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n        }\n        else if (!this._isShown && this.backdrop) {\n            this.backdrop.instance.isShown = false;\n            /** @type {?} */\n            var callbackRemove = (/**\n             * @return {?}\n             */\n            function () {\n                _this.removeBackdrop();\n                if (callback) {\n                    callback();\n                }\n            });\n            if (this.backdrop.instance.isAnimated) {\n                this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n            }\n            else {\n                callbackRemove();\n            }\n        }\n        else if (callback) {\n            callback();\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.removeBackdrop = /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    function () {\n        this._backdrop.hide();\n    };\n    /** Events tricks */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    ModalDirective.prototype.focusOtherModal = /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    function () {\n        if (this._element.nativeElement.parentElement == null) {\n            return;\n        }\n        /** @type {?} */\n        var otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n        if (!otherOpenedModals.length) {\n            return;\n        }\n        otherOpenedModals[otherOpenedModals.length - 1].focus();\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.resetAdjustments = /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    function () {\n        this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n        this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    };\n    /** Scroll bar tricks */\n    /** @internal */\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.checkScrollbar = /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    function () {\n        this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    };\n    /**\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.setScrollbar = /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        if (!document$1) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window$1\n            .getComputedStyle(document$1.body)\n            .getPropertyValue('padding-right') || 0, 10);\n        if (this.isBodyOverflowing) {\n            document$1.body.style.paddingRight = this.originalBodyPadding +\n                this.scrollbarWidth + \"px\";\n        }\n    };\n    /**\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.resetScrollbar = /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        document$1.body.style.paddingRight = this.originalBodyPadding + \"px\";\n    };\n    // thx d.walsh\n    // thx d.walsh\n    /**\n     * @protected\n     * @return {?}\n     */\n    ModalDirective.prototype.getScrollbarWidth = \n    // thx d.walsh\n    /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document$1.body, scrollDiv);\n        /** @type {?} */\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document$1.body, scrollDiv);\n        return scrollbarWidth;\n    };\n    ModalDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[bsModal]',\n                    exportAs: 'bs-modal'\n                },] }\n    ];\n    /** @nocollapse */\n    ModalDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: Renderer2 },\n        { type: ComponentLoaderFactory }\n    ]; };\n    ModalDirective.propDecorators = {\n        config: [{ type: Input }],\n        onShow: [{ type: Output }],\n        onShown: [{ type: Output }],\n        onHide: [{ type: Output }],\n        onHidden: [{ type: Output }],\n        onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n        onEsc: [{ type: HostListener, args: ['keydown.esc', ['$event'],] }]\n    };\n    return ModalDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BsModalService = /** @class */ (function () {\n    function BsModalService(rendererFactory, clf) {\n        this.clf = clf;\n        // constructor props\n        this.config = modalConfigDefaults;\n        // tslint:disable-next-line:no-any\n        this.onShow = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onShown = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHide = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHidden = new EventEmitter();\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.modalsCount = 0;\n        this.lastDismissReason = '';\n        this.loaders = [];\n        this._backdropLoader = this.clf.createLoader(null, null, null);\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n    /** Shows a modal */\n    // tslint:disable-next-line:no-any\n    /**\n     * Shows a modal\n     * @param {?} content\n     * @param {?=} config\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    BsModalService.prototype.show = /**\n     * Shows a modal\n     * @param {?} content\n     * @param {?=} config\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    function (content, config) {\n        this.modalsCount++;\n        this._createLoaders();\n        this.config = Object.assign({}, modalConfigDefaults, config);\n        this._showBackdrop();\n        this.lastDismissReason = null;\n        return this._showModal(content);\n    };\n    /**\n     * @param {?} level\n     * @return {?}\n     */\n    BsModalService.prototype.hide = /**\n     * @param {?} level\n     * @return {?}\n     */\n    function (level) {\n        var _this = this;\n        if (this.modalsCount === 1) {\n            this._hideBackdrop();\n            this.resetScrollbar();\n        }\n        this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this._hideModal(level);\n            _this.removeLoaders(level);\n        }), this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    };\n    /**\n     * @return {?}\n     */\n    BsModalService.prototype._showBackdrop = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n        /** @type {?} */\n        var isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n        if (this.modalsCount === 1) {\n            this.removeBackdrop();\n            if (isBackdropEnabled && isBackdropInDOM) {\n                this._backdropLoader\n                    .attach(ModalBackdropComponent)\n                    .to('body')\n                    .show({ isAnimated: this.config.animated });\n                this.backdropRef = this._backdropLoader._componentRef;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BsModalService.prototype._hideBackdrop = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.backdropRef) {\n            return;\n        }\n        this.backdropRef.instance.isShown = false;\n        /** @type {?} */\n        var duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () { return _this.removeBackdrop(); }), duration);\n    };\n    // tslint:disable-next-line:no-any\n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    BsModalService.prototype._showModal = \n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        /** @type {?} */\n        var modalLoader = this.loaders[this.loaders.length - 1];\n        /** @type {?} */\n        var bsModalRef = new BsModalRef();\n        /** @type {?} */\n        var modalContainerRef = modalLoader\n            .provide({ provide: ModalOptions, useValue: this.config })\n            .provide({ provide: BsModalRef, useValue: bsModalRef })\n            .attach(ModalContainerComponent)\n            .to('body')\n            .show({ content: content, isAnimated: this.config.animated, initialState: this.config.initialState, bsModalService: this });\n        modalContainerRef.instance.level = this.getModalsCount();\n        bsModalRef.hide = (/**\n         * @return {?}\n         */\n        function () {\n            modalContainerRef.instance.hide();\n        });\n        bsModalRef.content = modalLoader.getInnerComponent() || null;\n        bsModalRef.setClass = (/**\n         * @param {?} newClass\n         * @return {?}\n         */\n        function (newClass) {\n            modalContainerRef.instance.config.class = newClass;\n        });\n        return bsModalRef;\n    };\n    /**\n     * @param {?} level\n     * @return {?}\n     */\n    BsModalService.prototype._hideModal = /**\n     * @param {?} level\n     * @return {?}\n     */\n    function (level) {\n        /** @type {?} */\n        var modalLoader = this.loaders[level - 1];\n        if (modalLoader) {\n            modalLoader.hide();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BsModalService.prototype.getModalsCount = /**\n     * @return {?}\n     */\n    function () {\n        return this.modalsCount;\n    };\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    BsModalService.prototype.setDismissReason = /**\n     * @param {?} reason\n     * @return {?}\n     */\n    function (reason) {\n        this.lastDismissReason = reason;\n    };\n    /**\n     * @return {?}\n     */\n    BsModalService.prototype.removeBackdrop = /**\n     * @return {?}\n     */\n    function () {\n        this._backdropLoader.hide();\n        this.backdropRef = null;\n    };\n    /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\n    /** Scroll bar tricks */\n    /** @internal */\n    /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    BsModalService.prototype.checkScrollbar = /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    };\n    /**\n     * @return {?}\n     */\n    BsModalService.prototype.setScrollbar = /**\n     * @return {?}\n     */\n    function () {\n        if (!document) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window\n            .getComputedStyle(document.body)\n            .getPropertyValue('padding-right') || '0', 10);\n        if (this.isBodyOverflowing) {\n            document.body.style.paddingRight = this.originalBodyPadding +\n                this.scrollbarWidth + \"px\";\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    BsModalService.prototype.resetScrollbar = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        document.body.style.paddingRight = this.originalBodyPadding + \"px\";\n    };\n    // thx d.walsh\n    // thx d.walsh\n    /**\n     * @private\n     * @return {?}\n     */\n    BsModalService.prototype.getScrollbarWidth = \n    // thx d.walsh\n    /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document.body, scrollDiv);\n        /** @type {?} */\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document.body, scrollDiv);\n        return scrollbarWidth;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    BsModalService.prototype._createLoaders = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var loader = this.clf.createLoader(null, null, null);\n        this.copyEvent(loader.onBeforeShow, this.onShow);\n        this.copyEvent(loader.onShown, this.onShown);\n        this.copyEvent(loader.onBeforeHide, this.onHide);\n        this.copyEvent(loader.onHidden, this.onHidden);\n        this.loaders.push(loader);\n    };\n    /**\n     * @private\n     * @param {?} level\n     * @return {?}\n     */\n    BsModalService.prototype.removeLoaders = /**\n     * @private\n     * @param {?} level\n     * @return {?}\n     */\n    function (level) {\n        this.loaders.splice(level - 1, 1);\n        this.loaders.forEach((/**\n         * @param {?} loader\n         * @param {?} i\n         * @return {?}\n         */\n        function (loader, i) {\n            loader.instance.level = i + 1;\n        }));\n    };\n    // tslint:disable-next-line:no-any\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    BsModalService.prototype.copyEvent = \n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    function (from, to) {\n        var _this = this;\n        from.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            to.emit(_this.lastDismissReason);\n        }));\n    };\n    BsModalService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    BsModalService.ctorParameters = function () { return [\n        { type: RendererFactory2 },\n        { type: ComponentLoaderFactory }\n    ]; };\n    return BsModalService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ModalModule = /** @class */ (function () {\n    function ModalModule() {\n    }\n    /**\n     * @return {?}\n     */\n    ModalModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    };\n    ModalModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        ModalBackdropComponent,\n                        ModalDirective,\n                        ModalContainerComponent\n                    ],\n                    exports: [ModalBackdropComponent, ModalDirective],\n                    entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n                },] }\n    ];\n    return ModalModule;\n}());\n\nexport { BsModalRef, BsModalService, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };\n//# sourceMappingURL=ngx-bootstrap-modal.js.map\n"],"sourceRoot":"webpack:///"}