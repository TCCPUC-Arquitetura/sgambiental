{"version":3,"file":"bs-daterangepicker.component.d.ts","sources":["C:/TCC/master/sgambiental/FrontEnd/node_modules/ngx-bootstrap/datepicker/bs-daterangepicker.component.d.ts"],"sourcesContent":["import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';\nimport { BsDaterangepickerConfig } from './bs-daterangepicker.config';\nimport { Subscription } from 'rxjs';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { DatepickerDateCustomClasses } from './models';\nexport declare class BsDaterangepickerDirective implements OnInit, OnDestroy, OnChanges {\n    _config: BsDaterangepickerConfig;\n    /**\n     * Placement of a daterangepicker. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n    placement: 'top' | 'bottom' | 'left' | 'right';\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n    triggers: string;\n    /**\n     * Close daterangepicker on outside click\n     */\n    outsideClick: boolean;\n    /**\n     * A selector specifying the element the daterangepicker should be appended to.\n     */\n    container: string;\n    outsideEsc: boolean;\n    /**\n     * Returns whether or not the daterangepicker is currently being shown\n     */\n    isOpen: boolean;\n    /**\n     * Emits an event when the daterangepicker is shown\n     */\n    onShown: EventEmitter<any>;\n    /**\n     * Emits an event when the daterangepicker is hidden\n     */\n    onHidden: EventEmitter<any>;\n    _bsValue: Date[];\n    /**\n     * Initial value of daterangepicker\n     */\n    bsValue: Date[];\n    /**\n     * Config object for daterangepicker\n     */\n    bsConfig: Partial<BsDaterangepickerConfig>;\n    /**\n     * Indicates whether daterangepicker's content is enabled or not\n     */\n    isDisabled: boolean;\n    /**\n     * Minimum date which is available for selection\n     */\n    minDate: Date;\n    /**\n     * Maximum date which is available for selection\n     */\n    maxDate: Date;\n    /**\n     * Date custom classes\n     */\n    dateCustomClasses: DatepickerDateCustomClasses[];\n    /**\n     * Disable specific dates\n     */\n    datesDisabled: Date[];\n    /**\n     * Emits when daterangepicker value has been changed\n     */\n    bsValueChange: EventEmitter<Date[]>;\n    protected _subs: Subscription[];\n    private _datepicker;\n    private _datepickerRef;\n    constructor(_config: BsDaterangepickerConfig, _elementRef: ElementRef, _renderer: Renderer2, _viewContainerRef: ViewContainerRef, cis: ComponentLoaderFactory);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * Opens an element’s datepicker. This is considered a “manual” triggering of\n     * the datepicker.\n     */\n    show(): void;\n    /**\n     * Set config for daterangepicker\n     */\n    setConfig(): void;\n    /**\n     * Closes an element’s datepicker. This is considered a “manual” triggering of\n     * the datepicker.\n     */\n    hide(): void;\n    /**\n     * Toggles an element’s datepicker. This is considered a “manual” triggering\n     * of the datepicker.\n     */\n    toggle(): void;\n    ngOnDestroy(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;"}